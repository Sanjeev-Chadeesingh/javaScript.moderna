-added script dev to package.json
    -runs nodemon on index.js, npm run (to run a script from package.json) then script name (npm run dev)

EXPRESS
    -library that allows setup for full featured web server
    -save express object in app (const app = express());
        -set up route handler
            app.get(...)
            2 args, first is '/', 
            second is callback with 2 subArgs
                req - request-represents request from browser into our server
                    receiving info from user? req object!
                res - response-represents outgoing response from server back to browser
                    communicate with user or send info back to browser? res object!
        -then tell app to start listening for incoming network reqs, on particular port on machine (as first arg)
            -goto localhost:port# in the browser 
                -this is an HTTP request made to the jeevesMade, running, express webserver, for access! the response is printed on the screen
    
    expressBreakdown
        on localhost:3000
            HTTP Request via my OS
            Host: 'localhost'
            Port: 3000
            Path: '/'
            Method: 'GET'

        Express+HTML

        Forms+Backend
            give input elements names
                -form filled and submit hit, returns props (keys are input element names) in browser after ? (called 'query string')
                -give form method of POST
                    -now makes post-type request 
                        -type of req that makes a record of some kind
            *all info is appended to body of request*
                -need to add in code to post request handler to create a user account with info given in form 
            Using Data from form with req object, HTML element that will submit event at some point in time
                -on() == addEventListener()
                    -our on() is on the data
                        -log of data returns raw byte data 
                            -data.toString('utf8');
        
        Middleware!!!!!
            -in express 
                -functions that do some preproccessing on the req and res objects
                -primary means of code reuse in Express
            -in our project
                -logicParser between request and route handler 
            -functions in the middle of request handlers
            -can handmake middleware (like bodyParser), or use external libraries for it 
            
